include /common/control-container/control-container

mixin dropdown-guests(options = {})
  -
    const {
      title,
      state,
      type,
      placeholder,
      hasButtons,
      isOpened,
      isAlwaysOpened,
      maxCounts,
      defaultCounts,
      items,
    } = options

  +dropdown({
    title,
    state,
    type: "guests",
    placeholder: placeholder || "Сколько гостей",
    hasButtons: true,
    isOpened,
    isAlwaysOpened,
    defaultCounts,
    items: items || [
      {
        name: "взрослые",
        defaultcount: defaultCounts ? defaultCounts[0] : "0",
        maxcount: maxCounts ? maxCounts[0] : "Infinity",
        declensions: [
          "гость",
          "гостя",
          "гостей"
        ]
      },
      {
        name: "дети",
        defaultcount: defaultCounts ? defaultCounts[1] : "0",
        maxcount: maxCounts ? maxCounts[1] : "Infinity"
      },
      {
        name: "младенцы",
        defaultcount: defaultCounts ? defaultCounts[2] : "0",
        maxcount: maxCounts ? maxCounts[2] : "Infinity",
        declensions: [
          "младенец",
          "младенца",
          "младенцев"
        ]
      }
    ]
  })
mixin dropdown-preferences(options = {})
  -
    const {
      title,
      state,
      type,
      placeholder,
      hasButtons,
      isOpened,
      isAlwaysOpened,
      maxCounts,
      defaultCounts,
      items,
    } = options

  +dropdown({
    title,
    state,
    type: "preferences",
    placeholder: placeholder || "Выберите удобства",
    hasButtons: false,
    isOpened,
    isAlwaysOpened,
    defaultCounts,
    items: items || [
      {
        name: "Спальни",
        defaultcount: defaultCounts ? defaultCounts[0] : "0",
        maxcount: maxCounts ? maxCounts[0] : "10",
        declensions: [
          "спальня",
          "спальни",
          "спален"
        ]
      },
      {
        name: "Кровати",
        defaultcount: defaultCounts ? defaultCounts[1] : "0",
        maxcount: maxCounts ? maxCounts[1] : "5",
        declensions: [
          "кровать",
          "кровати",
          "кроватей"
        ]
      },
      {
        name: "Ванные комнаты",
        defaultcount: defaultCounts ? defaultCounts[2] : "0",
        maxcount: maxCounts ? maxCounts[2] : "4",
        declensions: [
          "ванная комната",
          "ванные комнаты",
          "ванных комнат"
        ]
      }
    ]
  })

mixin add-items(itemsArray)
  each item, index in itemsArray
    -
      const {
        name,
        defaultcount,
        maxcount,
        declensions,
      } = item

    .iqdropdown-menu-option.js-iqdropdown-menu-option(
      data-id="item"+(index+1)
      data-name=name
      data-defaultcount=defaultcount || "0"
      data-maxcount=maxcount
      data-declensions=declensions || ""
    )
      div
        p.iqdropdown-item= name

//- options: {
      title,
      state,
      type,
      placeholder,
      hasButtons,
      isOpened,
      isAlwaysOpened,
      maxCounts[],
      defaultCounts[],
      items[{name, defaultcount, maxcount, declensions[]}]
    }
mixin dropdown(options = {})
  -
    const randID = Math.floor(Math.random() * (1 - 1000) + 1000)
    const {
      title,
      state,
      type,
      placeholder,
      hasButtons,
      isOpened,
      isAlwaysOpened,
      defaultCounts,
      items,
    } = options

  +control-container({
    title,
    state,
  })
    input.iqdropdown__input.js-iqdropdown__input(
      name=type
    )
    .iqdropdown.js-iqdropdown(
      id=`dd-${randID}`
      class=type ? `iqdropdown_${type} js-iqdropdown_${type}` : ""
      data-placeholder=placeholder
      class=isOpened ? "menu-open" : ""
      data-always-opened=isAlwaysOpened ? "true" : ""
    )
      p.iqdropdown-selection.js-iqdropdown-selection
      button.iqdropdown__arrow.material-icons(
        type="button"
      ) expand_more
      .iqdropdown-menu.js-iqdropdown-menu
        +add-items(items)
        if hasButtons
          .iqdropdown__controls.js-iqdropdown__controls
            button.iqdropdown__button.button.button_type_link.button_clear.js-button_clear(
              class=defaultCounts ? "" : "button_hidden"
              type="button"
            ) Очистить
            button.iqdropdown__button.button.button_type_link.js-button_type_link(
              type="button"
            ) Применить
