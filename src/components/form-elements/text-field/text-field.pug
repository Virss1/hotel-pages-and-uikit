include /common/control-container/control-container

//- options: {
      type: "string",
      placeholder: "string",
      cardType: "string" ("sign-in" | "registration")
      isMasked: boolean,
      isSubscription: boolean,
      isForceHoverStyle: boolean,
      value: "string",
    }
mixin text-field(options)
  -
    const {
      type,
      placeholder,
      cardType,
      isMasked,
      isSubscription,
      isForceHoverStyle,
      value
    } = options
    let inputModifierClassName = "text-field"

    inputModifierClassName += isMasked
      ? " text-field__input_masked js-text-field__input_masked" : ""
    inputModifierClassName += isSubscription ? " text-field__input_subscription" : ""
    inputModifierClassName += isForceHoverStyle ? " text-field__input_force-focus-hover" : ""

    let autocomplete = '';
    switch (type) {
      case 'password':
        switch (cardType) {
          case 'sign-in':
            autocomplete = 'current-password';
            break;
          case 'registration':
            autocomplete = 'new-password';
            break;
        }
        break;
      case 'email':
        autocomplete = 'email';
        break;
    }
    switch (placeholder) {
      case 'Имя':
        autocomplete = 'given-name';
        break;
      case 'Фамилия':
        autocomplete = 'family-name';
        break;
    }

  .text-field(
    class=isSubscription ? "text-field_subscription" : ""
  )
    input.text-field__input.js-text-field__input(
      class=inputModifierClassName
      type=isSubscription ? "email" : type || "text"
      placeholder=isSubscription ? "Email" : isMasked ? "ДД.ММ.ГГГГ" : placeholder
      autocomplete=autocomplete
      value=value
      maxlength=isMasked ? "10" : ""
    )
    if isSubscription
      button.text-field_subscription__arrow.material-icons(type="button") arrow_forward
